{"version":3,"sources":["components/modals/ModalDelete.js","components/Notes/components/NotesHeader.js","components/Notes/components/NoteItem.js","components/Notes/components/NotesBody.js","components/Notes/NotesMain.js"],"names":["Transition","React","forwardRef","props","ref","direction","NotebookModal","open","TransitionComponent","keepMounted","onClose","handleClose","aria-labelledby","aria-describedby","style","padding","id","text","className","type","onClick","onConfirm","NotesHeader","disabled","isEditable","borderBottomColor","value","notebookHeader","onChange","onChangeNoteBookName","NoteItem","state","isPaletteShown","color","date","isOld","completed","isSaved","isLoading","isEditing","title","description","modalDelete","togglePalette","setState","setColor","onTitleChange","e","target","ondescriptionChange","showNewDate","dateObj","Date","month","getUTCMonth","getUTCDate","getUTCFullYear","getDate","formatDate","createNote","isAllowed","onCardEdit","onDoneEdit","updatedCard","onNoteUpdate","openModalDelete","closeModalDelete","onConfirmDelete","onNoteDelete","onCheckChange","length","renderIcons","marginTop","icon","faPencilAlt","marginRight","faTrashAlt","marginLeft","year","getFullYear","getMonth","toString","padStart","this","allowAnyClick","backgroundColor","textDecoration","placeholder","opacity","Divider","Checkbox","checked","CircularProgress","ModalDelete","Component","NotesBody","token","userData","uploadNote","note","a","async","NotebookId","res","refreshNotes","data","notes","noteId","removeNote","then","updatedNote","updateNote","showStartMessage","fontSize","renderNotes","firstNotebook","loading","map","item","key","_id","NotesMain","lastName","firstName","thickness","display"],"mappings":"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","file":"static/js/5.f4e2c30c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nconst NotebookModal = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={true}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <div style={{ padding: 10 }}>\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n            {`Are You Sure To Delete This ${props.text}?`}\r\n          </DialogTitle>\r\n          <DialogActions>\r\n            <div className=\"div-center\">\r\n              <button type=\"submit\" className=\"btn btn-accent red-button\" onClick={props.onConfirm}>Confirm</button>\r\n            </div>\r\n          </DialogActions>\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotebookModal;","import React from 'react'\r\n\r\n\r\n\r\nexport default function NotesHeader(props) {\r\n  return (\r\n    <div\r\n      className=\"notes-header\"\r\n    >\r\n      <input\r\n        disabled={!props.isEditable}\r\n        style={{ borderBottomColor: props.isEditable && 'black' }}\r\n        className=\"text-input\"\r\n        value={props.notebookHeader}\r\n        onChange={props.onChangeNoteBookName}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Divider } from '@material-ui/core';\r\nimport PaletteIcon from '@material-ui/icons/Palette';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport Draggable from 'react-draggable'; // Both at the same time\r\nimport ModalDelete from '../../modals/ModalDelete'\r\nimport './noteItem.css'\r\n\r\n\r\nexport default class NoteItem extends Component {\r\n  state = {\r\n    isPaletteShown: false, color: this.props.color, id: this.props.id, date: this.props.date, isOld: this.props.isOld, completed: this.props.completed, isSaved: false, isLoading: false, isEditing: false,\r\n    title: this.props.title, description: this.props.description, modalDelete: false\r\n  }\r\n\r\n  togglePalette = () => {\r\n    this.setState({ isPaletteShown: !this.state.isPaletteShown })\r\n  }\r\n\r\n  setColor = (color) => {\r\n    this.togglePalette();\r\n    this.setState({ color })\r\n  }\r\n\r\n\r\n  onTitleChange = (e) => {\r\n    this.setState({ title: e.target.value })\r\n  }\r\n\r\n  ondescriptionChange = (e) => {\r\n    this.setState({ description: e.target.value })\r\n  }\r\n\r\n  showNewDate = () => {\r\n    const dateObj = new Date();\r\n    const month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n    const day = dateObj.getUTCDate();\r\n    const year = dateObj.getUTCFullYear();\r\n\r\n    const newdate = day + \"/\" + month + \"/\" + year;\r\n\r\n    return newdate;\r\n\r\n  }\r\n\r\n\r\n\r\n  formatDate(date) {\r\n    let year = date.getFullYear();\r\n    let month = (1 + date.getMonth()).toString().padStart(2, '0');\r\n    let day = date.getDate().toString().padStart(2, '0');\r\n    return month + '/' + day + '/' + year;\r\n  }\r\n\r\n\r\n  getDate = () => (this.state.isOld && this.state.date ? this.formatDate(this.state.date) : this.showNewDate())\r\n\r\n\r\n  createNote = () => {\r\n    const { title, description, color } = this.state;\r\n    if (this.isAllowed(title)) {\r\n      this.props.createNote({ title, description, color })\r\n      this.setState({ title: '', description: '', color: '#fff' })\r\n    }\r\n  }\r\n\r\n\r\n  onCardEdit = () => {\r\n    this.setState({ isEditing: true });\r\n\r\n  }\r\n  onDoneEdit = () => {\r\n    this.setState({ isEditing: false });\r\n    const updatedCard = { title: this.state.title, description: this.state.description, color: this.state.color, completed: this.state.completed }\r\n    this.props.onNoteUpdate(updatedCard, this.state.id);\r\n  }\r\n\r\n\r\n  openModalDelete = () => {\r\n    this.setState({ modalDelete: true });\r\n  }\r\n\r\n  closeModalDelete = () => {\r\n    this.setState({ modalDelete: false });\r\n  }\r\n\r\n  onConfirmDelete = () => {\r\n    this.closeModalDelete();\r\n    this.props.onNoteDelete(this.state.id);\r\n  }\r\n\r\n  onCheckChange = () => (this.setState({ completed: !this.state.completed }, () => this.onDoneEdit()))\r\n\r\n\r\n  isAllowed = (title) => (title.length > 0);\r\n\r\n\r\n  renderIcons = () => {\r\n    if (this.state.isOld && !this.state.isEditing) {\r\n      return (<div className=\"flex-center\" style={{ marginTop: 10 }} >\r\n        <FontAwesomeIcon icon={faPencilAlt} style={{ marginRight: '20%' }} className=\"icon\" onClick={this.onCardEdit} />\r\n        <FontAwesomeIcon icon={faTrashAlt} className=\"icon\" onClick={this.openModalDelete} />\r\n\r\n      </div>)\r\n    } else {\r\n      return (\r\n        <div className=\"flex-center\" style={{ marginTop: 10 }} >\r\n          <PaletteIcon className=\"icon\" onClick={this.togglePalette} />\r\n          <DoneOutlineIcon style={{ marginLeft: '15%' }} className=\"icon\" onClick={() => { this.state.isEditing ? this.onDoneEdit() : this.createNote() }} />\r\n\r\n        </div>\r\n      )\r\n\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { isOld, isSaved, title, description, isEditing, modalDelete, completed } = this.state;\r\n    return (\r\n      <Draggable allowAnyClick={true} disabled={!isOld || isEditing}>\r\n        <div className=\"note-item\" style={{ backgroundColor: this.state.color, textDecoration: completed ? 'line-through' : '' }} >\r\n\r\n          <div className=\"header\"  >\r\n            <input className=\"input-header\" style={{ textDecoration: completed ? 'line-through' : '' }}\r\n              placeholder=\"Type a Title...\" onChange={this.onTitleChange} value={title} disabled={!isEditing && isOld}></input>\r\n            <h6 style={{ opacity: 0.5 }}>{this.getDate()}</h6>\r\n          </div>\r\n          <Divider />\r\n          <div className=\"note-description-container\">\r\n            <textarea className=\"textarea-styles\" placeholder=\"Type Your Note...\" onChange={this.ondescriptionChange} value={description} disabled={!isEditing && isOld} />\r\n\r\n            {this.renderIcons()}\r\n\r\n            {this.state.isPaletteShown && <div className=\"color-palette-container\" >\r\n              <div className=\"circle\" style={{ backgroundColor: '#BCE0FF' }} onClick={() => this.setColor('#BCE0FF')} />\r\n              <div className=\"circle\" style={{ backgroundColor: '#a5feba' }} onClick={() => this.setColor('#a5feba')} />\r\n              <div className=\"circle\" style={{ backgroundColor: '#feeda5' }} onClick={() => this.setColor('#feeda5')} />\r\n              <div className=\"circle\" style={{ backgroundColor: '#ffb2b2' }} onClick={() => this.setColor('#ffb2b2')} />\r\n              <div className=\"circle\" style={{ backgroundColor: '#b0A4E6' }} onClick={() => this.setColor('#b0A4E6')} />\r\n              <div className=\"circle\" style={{ backgroundColor: '#fff' }} onClick={() => this.setColor('#fff')} />\r\n            </div>\r\n            }\r\n\r\n          </div>\r\n          {isOld && !isEditing && <Checkbox\r\n            className=\"checkbox\"\r\n            value={completed}\r\n            checked={completed}\r\n            color=\"primary\"\r\n            style={{ color: completed ? '#007bff' : 'gray' }}\r\n            onChange={this.onCheckChange}\r\n          />}\r\n\r\n          {isSaved && !isOld && <h6 className=\"text-bottom \">Not Saved</h6>}\r\n          {this.state.isLoading && <CircularProgress className=\"loading\" />}\r\n          {modalDelete && <ModalDelete handleClose={this.closeModalDelete} onConfirm={this.onConfirmDelete} text=\"Note\" />}\r\n\r\n        </div>\r\n      </Draggable>\r\n\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport FadeIn from 'react-fade-in';\r\nimport '../notes.css'\r\nimport NoteItem from './NoteItem'\r\nimport { uploadNote, removeNote, updateNote } from '../../../api/api'\r\nexport default class NotesBody extends Component {\r\n  state = { token: this.props.token, userData: this.props.userData, }\r\n\r\n  uploadNote = async (note) => {\r\n    const res = await uploadNote(note, this.props.NotebookId, this.state.token);\r\n    this.props.refreshNotes(res.data.notes);\r\n  }\r\n\r\n  onNoteDelete = async (noteId) => {\r\n    removeNote(this.props.NotebookId, noteId, this.state.token).then((res) => this.props.refreshNotes(res.data.notes))\r\n\r\n  }\r\n\r\n  onNoteUpdate = async (updatedNote, noteId) => {\r\n    const res = await updateNote(this.props.NotebookId, noteId, updatedNote, this.state.token);\r\n    this.props.refreshNotes(res.data.notes);\r\n  }\r\n\r\n  showStartMessage = () => {\r\n    return (\r\n      <div className=\"welcome-message-container\">\r\n        <div className=\"error__content\">\r\n          <h2 style={{ fontSize: 50 }}>Welcome</h2>\r\n          <h3 style={{ fontSize: 30 }}>Create a new Notebook to Start using the App</h3>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderNotes = (firstNotebook, notes, loading) => {\r\n    if (!firstNotebook && !loading) return this.showStartMessage()\r\n    return notes && notes.length > 0 && notes.map(item => (\r\n      <NoteItem key={item._id} title={item.note.title} description={item.note.description} completed={item.note.completed}\r\n        color={item.note.color} isOld={true} id={item._id} onNoteDelete={this.onNoteDelete} onNoteUpdate={this.onNoteUpdate} />\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    const { loading, firstNotebook, notes } = this.props;\r\n\r\n    return (\r\n      <FadeIn>\r\n        <div className=\"notes-body\" >\r\n          {firstNotebook && <NoteItem createNote={this.uploadNote} color=\"#fff\" description='' title='' isOld={false} />}\r\n          {this.renderNotes(firstNotebook, notes, loading)}\r\n        </div>\r\n      </FadeIn>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport NotesHeader from './components/NotesHeader';\r\nimport NotesBody from './components/NotesBody';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './notes.css';\r\n\r\nexport default function NotesMain({\r\n  notes,\r\n  firstNotebook,\r\n  NotebookId,\r\n  isEditable,\r\n  loading,\r\n  userData,\r\n  token,\r\n  notebookHeader,\r\n  refreshNotes,\r\n  onChangeNoteBookName\r\n}) {\r\n\r\n  return (\r\n    <div className=\"notes-main\">\r\n      <NotesHeader\r\n        notebookHeader={notebookHeader}\r\n        isEditable={isEditable}\r\n        onChangeNoteBookName={onChangeNoteBookName}\r\n        key={userData && userData.lastName}\r\n      />\r\n      <NotesBody\r\n        userData={userData}\r\n        token={token}\r\n        notes={notes}\r\n        NotebookId={NotebookId}\r\n        firstNotebook={firstNotebook}\r\n        loading={loading}\r\n        refreshNotes={refreshNotes}\r\n        key={userData && userData.firstName}\r\n      />\r\n      <div className=\"loading-main-container\">\r\n        <CircularProgress\r\n          className=\"loading-main\"\r\n          thickness={0.2}\r\n          style={{ display: loading ? '' : 'none' }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}